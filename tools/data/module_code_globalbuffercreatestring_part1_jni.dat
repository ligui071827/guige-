{
    IFX_RETURN_STATUS status = IFX_ERROR;

    if (hModule == NULL)
    {
        return IFX_ERROR;
    }

    JNIEnv* jniEnv;
    if (0 != (*global_ptr_JVM)->AttachCurrentThreadAsDaemon(global_ptr_JVM, &jniEnv, NULL))
        return IFX_ERROR;

    CACHE_MODULE* cacheModule = (CACHE_MODULE*)hModule;
    CACHE_BUFFER* cacheBuffer = (CACHE_BUFFER*)IFXF_malloc(sizeof(CACHE_BUFFER));
    if (cacheBuffer == NULL)
        return IFX_ERROR;

    memset(cacheBuffer, 0, sizeof(CACHE_BUFFER));

    jobject byteBufferObj = (*jniEnv)->NewObject(jniEnv, HandleCallbacks.HandleClass, HandleCallbacks.Constructor);
    jobject bufferObj = (*jniEnv)->CallObjectMethod(jniEnv,
            cacheModule->moduleObject,
