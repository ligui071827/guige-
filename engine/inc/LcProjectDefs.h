/***************************************************************************
*
*				Copyright 2006 Mentor Graphics Corporation
*						  All Rights Reserved.
*
* THIS WORK CONTAINS TRADE SECRET AND PROPRIETARY INFORMATION WHICH IS
* THE PROPERTY OF MENTOR GRAPHICS CORPORATION OR ITS LICENSORS AND IS
* SUBJECT TO LICENSE TERMS.
*
****************************************************************************/
#ifndef LcProjectDefsH
#define LcProjectDefsH

/*-------------------------------------------------------------------------*//**
	Macros that configure the NDE feature set and build options.

	Do NOT change these if you are using a DLL build of NDE, as the headers
	will no longer match the compiled version.

	NDE developers should note that files in directories under Release/Include
	are fixed for any given release of NDE, and may not be modified for
	individual builds.	Modifying files in these directories effectively
	advances the NDE revision.

	Files in Release/Include named LcProfile*.h (including this file and
	LcProfileHdrs.h) are intended to be modified to control different build
	profiles of the same version of NDE, although note that the NDE DLL must
	be rebuilt.	 Parts of these files may be conditionally included based on
	platform symbols, and for default configurations of NDE, this is
	recommended above using different edited copies of files for different
	platforms.	The default version of this file checked in to source control
	will define default configurations for each platform.
*/

// Definitions that may be switched on and off by the customer.
#include "ifxui_config.h"

/*-------------------------------------------------------------------------*//**
	NDE core feature sets
*/
	#define LC_USE_XML					// Include support for reading XML
//	#define LC_USE_XML_SAVE				// Include support for creating/saving XML
	#define LC_ENABLE_CJK_SUPPORT		// enable CJK support in font rendering

/*-------------------------------------------------------------------------*//**
	NDE modifiers
*/
//	#define LC_USE_NO_ROTATION			// Omit support for rotating layers

/*-------------------------------------------------------------------------*//**
	Debugging/development options
*/
//	#define LC_DEBUG_CHECKS				// Parameter and stack checking, etc
//	#define LC_PAINT_FULL				// Paint entire screen each frame
//	#define LC_DEBUG_LOGGING			// Platform-specific log to file
//	#define LC_DEBUG_MONITOR_HEAP		// Use the Nucleus memory monitoring utility
//	#define LC_PAINT_DEBUG				// Show which regions of the screen are being updated

/*-------------------------------------------------------------------------*//**
	Platform-specific build options (OpenGL)
*/
//	#define LC_OGL_ONLY_4K_COLORS		// Build for 4096 color devices

/*-------------------------------------------------------------------------*//**
	Define parts of the NDHS system to enable.
*/
	// Ndhs Options.
	#define NDHS_RESOURCE_FILE_EXTENSION_REPLACEMENT	// Include code for template, menu extension replacement

	// Include defs shared across multiple NDHS platforms
	#include "inflexionui/engine/inc/NdhsSharedDefs.h"

	// Define the platforms required directory separator.
#ifdef IFX_USE_PLATFORM_FILES
	#if !defined (IFX_PLAT_DIR_SEP)
		#define	NDHS_PLAT_DIR_SEP			"\\"
	#else
		#define	NDHS_PLAT_DIR_SEP			IFX_PLAT_DIR_SEP
	#endif
	#if !defined (IFX_PLAT_DIR_SEP_CHAR)
		#define NDHS_PLAT_DIR_SEP_CHAR		'\\'
	#else
		#define	NDHS_PLAT_DIR_SEP_CHAR		IFX_PLAT_DIR_SEP_CHAR
	#endif
#else
	#define	NDHS_PLAT_DIR_SEP				"/"
	#define NDHS_PLAT_DIR_SEP_CHAR			'/'
#endif

	// Define the platform's drive separator and the position it occurs at 
	// (starting at 0).
	#define	IFX_PLAT_DRIVE_SEP_CHAR			':'
	#define IFX_PLAT_DRIVE_SEP_POS			1

	// Debug option to show drag regions onscreen (R, G, B define the color)
	// #define NDHS_PAINT_DRAG_REGIONS
	#if defined(NDHS_PAINT_DRAG_REGIONS)
		#define NDHS_PAINT_DRAG_REGIONS_R	0x00
		#define NDHS_PAINT_DRAG_REGIONS_G	0xFF
		#define NDHS_PAINT_DRAG_REGIONS_B	0x00
	#endif

// The project build must provide a file table and count.
// This will typically be generated by a packaging tool
typedef struct _lct_rom_file_entry
{
	const char*						name;
	unsigned						length;
	const unsigned char*			data;
}LcTRomFileEntry;

// Theme file table - definitions will be created by the packager tool
extern LcTRomFileEntry				g_romFileTable[];
extern unsigned						g_romFileCount;

#if !defined(NDHS_JNI_INTERFACE) && !defined(NDHS_PACKAGER) && !defined(NDHS_INTEGRATOR) && defined(IFX_RENDER_DIRECT_OPENGL_20)
// Shader File table -  definitions will be created by packager tool
extern LcTRomFileEntry 				g_shaderRomFileTable[];
extern unsigned 					g_shaderRomFileCount;
#endif 

// Template for min and max
#if defined(__cplusplus)
	template <class T> inline T min(T a, T b) { return (a <= b) ? a : b; }
	template <class T> inline T max(T a, T b) { return (a >= b) ? a : b; }
#endif

/*-------------------------------------------------------------------------*//**
	Feature set dependencies - this will #define or #undef any required
	features according to the platform and the features selected above
*/
	#include "inflexionui/engine/inc/LcProfileRules.h"

#endif //LcProjectDefsH
